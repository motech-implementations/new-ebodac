plugins {
    id 'java'
    id 'idea'
    id 'org.springframework.boot' version '2.1.6.RELEASE'
    id 'com.moowork.node' version '1.3.1'
    id 'net.ltgt.apt' version '0.20'
    id 'org.liquibase.gradle' version '2.0.1'
    id 'pmd'
    id 'checkstyle'
    id 'net.researchgate.release' version '2.8.1'
}

apply plugin: 'io.spring.dependency-management'

group 'org.motechproject.newebodac'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.apache.commons:commons-lang3:3.9'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-quartz'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.1.6.RELEASE'
    implementation 'org.springframework.security:spring-security-jwt'
    implementation 'mysql:mysql-connector-java'
    implementation 'org.liquibase:liquibase-core'
    implementation 'org.mapstruct:mapstruct:1.3.0.Final'
    compile 'net.sf.supercsv:super-csv:2.4.0'

    compileOnly 'org.projectlombok:lombok:1.18.8'

    annotationProcessor 'org.mapstruct:mapstruct-processor:1.3.0.Final'
    annotationProcessor 'org.projectlombok:lombok:1.18.8'

    liquibaseRuntime 'org.liquibase:liquibase-core'
    liquibaseRuntime 'org.liquibase.ext:liquibase-hibernate5:3.6'
    liquibaseRuntime 'mysql:mysql-connector-java'
    liquibaseRuntime 'ch.qos.logback:logback-core:1.2.3'
    liquibaseRuntime 'ch.qos.logback:logback-classic:1.2.3'
    liquibaseRuntime sourceSets.main.compileClasspath

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

defaultTasks "bootRun"

processResources {
    filesMatching("**/application.yml") {
        expand(project.properties)
    }
}

java {
    sourceCompatibility = JavaVersion.toVersion(targetJavaVersion)
}

node {
    version = '10.16.0'
    npmVersion = '6.9.0'
    download = true
}

checkstyle {
    toolVersion '8.22'
    configFile = file("checkstyle.xml")
    maxWarnings = 0
}

pmd {
    toolVersion = '6.16.0'
    consoleOutput= true
    ignoreFailures = false
    ruleSets = []
    ruleSetFiles = files("ruleset.xml")
    reportsDir = file("build/reports/pmd")
}

project.ext.diffChangelogFile = "src/main/resources/liquibase/changelog/" + new Date().format("yyyyMMddHHmmss") + "_changelog.xml"

if (!project.hasProperty("runList")) {
    project.ext.runList = "diffLog"
}

liquibase {
    activities {
        diffLog {
            driver "com.mysql.cj.jdbc.Driver"
            url databaseUrl
            username databaseUser
            password databasePassword
            changeLogFile project.ext.diffChangelogFile
            referenceUrl "hibernate:spring:org.motechproject.newebodac.domain?dialect=org.hibernate.dialect.MySQL5InnoDBDialect&hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy&hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy"
            defaultSchemaName "newEbodac"
            logLevel "debug"
            classpath "$buildDir/classes/java/main"
        }
    }

    runList = project.ext.runList
}

diff.dependsOn compileJava
diffChangeLog.dependsOn compileJava
generateChangelog.dependsOn compileJava

task webpack(type: NpmTask, dependsOn: 'npmInstall') {
    args = ['run-script', 'build']
}

task webpackWatch(type: NpmTask, dependsOn: 'npmInstall') {
    args = ['run-script', 'watch']
}

task webpackProd(type: NpmTask, dependsOn: 'npmInstall') {
    args = ['run-script', 'prod']
}

task dbDiff() {}

bootJar.dependsOn 'webpackProd'
bootRun.dependsOn 'webpack'
dbDiff.dependsOn 'diffChangeLog'
